#if !canImport(ObjectiveC)
import XCTest

extension AbsolutePathTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AbsolutePathTests = [
        ("testAbsolution", testAbsolution),
        ("testCurrent", testCurrent),
        ("testResolvingWithoutSymlinks", testResolvingWithoutSymlinks),
        ("testRoot", testRoot),
        ("testStorageAssignment", testStorageAssignment),
        ("testStorageCopyingWhenNonUniquelyReferenced", testStorageCopyingWhenNonUniquelyReferenced),
        ("testStorageCopyingWhenUniquelyReferenced", testStorageCopyingWhenUniquelyReferenced),
        ("testSubpathDetermination", testSubpathDetermination),
        ("testTmpDir", testTmpDir),
    ]
}

extension PathComponentConvertibleTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PathComponentConvertibleTests = [
        ("testBinaryIntegerConformance", testBinaryIntegerConformance),
        ("testFloatingPointConformance", testFloatingPointConformance),
        ("testRawRepresentableConformance", testRawRepresentableConformance),
        ("testStaticStringConformance", testStaticStringConformance),
        ("testStringConformance", testStringConformance),
    ]
}

extension PathElementTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PathElementTests = [
        ("testAppendingExtensions", testAppendingExtensions),
        ("testConvenienceExtensionOnPathComponentConvertible", testConvenienceExtensionOnPathComponentConvertible),
        ("testInitialization", testInitialization),
        ("testPathComponentConvertibleConformance", testPathComponentConvertibleConformance),
        ("testPathStringComputationAndParsing", testPathStringComputationAndParsing),
        ("testRemovingPathExtensions", testRemovingPathExtensions),
        ("testSimplifactionAction", testSimplifactionAction),
    ]
}

extension PathProtocolTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PathProtocolTests = [
        ("testAppendingPathComponents", testAppendingPathComponents),
        ("testAppendingPathExtension", testAppendingPathExtension),
        ("testAppendingRelativePaths", testAppendingRelativePaths),
        ("testAppendingVariadicPathCompontents", testAppendingVariadicPathCompontents),
        ("testCustomDebugStringConvertibleConformance", testCustomDebugStringConvertibleConformance),
        ("testCustomStringConvertibleConformance", testCustomStringConvertibleConformance),
        ("testDecodableConformance", testDecodableConformance),
        ("testElementsInitializer", testElementsInitializer),
        ("testEncodableConformance", testEncodableConformance),
        ("testEquatableConformance", testEquatableConformance),
        ("testHashableConformance", testHashableConformance),
        ("testLastPathComponent", testLastPathComponent),
        ("testLastPathExtension", testLastPathExtension),
        ("testLosslessStringConvertibleConformance", testLosslessStringConvertibleConformance),
        ("testPathString", testPathString),
        ("testPathStringInitializer", testPathStringInitializer),
        ("testRemovingLastPathComponent", testRemovingLastPathComponent),
        ("testRemovingLastPathExtension", testRemovingLastPathExtension),
        ("testSlashAppending", testSlashAppending),
        ("testSubPathDetermination", testSubPathDetermination),
    ]
}

extension PathStorageTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PathStorageTests = [
        ("testAppending", testAppending),
        ("testCopying", testCopying),
        ("testElementsUpdateResetsPathStringStorage", testElementsUpdateResetsPathStringStorage),
        ("testInitialization", testInitialization),
        ("testLastPathElement", testLastPathElement),
        ("testLastSafeSubsciptIndex", testLastSafeSubsciptIndex),
        ("testPathStringCaching", testPathStringCaching),
        ("testResolvingLongPathsWithoutSymlinks", testResolvingLongPathsWithoutSymlinks),
        ("testResolvingWithoutSymlinks", testResolvingWithoutSymlinks),
        ("testResolvingWithSymlinks", testResolvingWithSymlinks),
    ]
}

extension RelativePathTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RelativePathTests = [
        ("testAbsolution", testAbsolution),
        ("testCollectionContains", testCollectionContains),
        ("testCurrent", testCurrent),
        ("testNestingInAbsolute", testNestingInAbsolute),
        ("testResolving", testResolving),
        ("testStorageAssignment", testStorageAssignment),
        ("testStorageCopyingWhenNonUniquelyReferenced", testStorageCopyingWhenNonUniquelyReferenced),
        ("testStorageCopyingWhenUniquelyReferenced", testStorageCopyingWhenUniquelyReferenced),
        ("testSubpathDetermination", testSubpathDetermination),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(AbsolutePathTests.__allTests__AbsolutePathTests),
        testCase(PathComponentConvertibleTests.__allTests__PathComponentConvertibleTests),
        testCase(PathElementTests.__allTests__PathElementTests),
        testCase(PathProtocolTests.__allTests__PathProtocolTests),
        testCase(PathStorageTests.__allTests__PathStorageTests),
        testCase(RelativePathTests.__allTests__RelativePathTests),
    ]
}
#endif
